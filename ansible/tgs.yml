---
- name: Install ASP.NET Core Runtime and TGStation Server
  hosts: localhost
  connection: local
  become: yes
  
  vars_prompt:
  - name: tgs_db_password
    prompt: "Enter password for MariaDB TGS user"
    private: yes

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        
    - name: Install PyMySQL for Ansible MySQL modules
      apt:
        name: python3-pymysql
        state: present

    - name: Install MariaDB server
      apt:
        name: mariadb-server
        state: present
        update_cache: yes

    - name: Ensure MariaDB is started and enabled
      systemd:
        name: mariadb
        state: started
        enabled: yes

    - name: Bind MariaDB to localhost only (disable remote connections)
      lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address'
        line: 'bind-address = 127.0.0.1'
        backup: yes
      notify: Restart MariaDB

    - name: Remove anonymous users (mysql_secure_installation step)
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Disallow root login remotely
      mysql_user:
        name: root
        host: "{{ item }}"
        state: absent
        login_unix_socket: /run/mysqld/mysqld.sock
      loop:
        - '{{ ansible_hostname }}'
        - '::1'
        - '%'

    - name: Remove test database
      mysql_db:
        name: test
        state: absent
        login_unix_socket: /run/mysqld/mysqld.sock
        
    - name: Create 'tgs' database
      mysql_db:
        name: tgs
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Create 'tgs' user with restricted access
      mysql_user:
        name: tgs
        password: "{{ tgs_db_password }}"
        priv: "tgs.*:ALL"
        host: localhost
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Add .NET Backports PPA
      apt_repository:
        repo: ppa:dotnet/backports
        state: present

    - name: Update apt cache after adding backports
      apt:
        update_cache: yes

    - name: Install ASP.NET Core Runtime 9.0
      apt:
        name: aspnetcore-runtime-9.0
        state: present

    - name: Add i386 architecture
      command: dpkg --add-architecture i386
      args:
        creates: /etc/dpkg/dpkg.cfg.d/multiarch
      notify: Update apt cache

    - name: Install software-properties-common
      apt:
        name: software-properties-common
        state: present

    - name: Add TGStation apt key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: EEEDC8280A307527
        state: present

    - name: Add TGStation repository
      apt_repository:
        repo: "deb https://tgstation.github.io/tgstation-ppa/debian unstable main"
        state: present
        filename: tgstation

    - name: Update apt cache after adding TGStation repo
      apt:
        update_cache: yes

    - name: Install TGStation Server
      apt:
        name: tgstation-server
        state: present
        
    - name: Ensure expect is installed
      apt:
        name: expect
        state: present

    - name: Run tgs-configure non-interactively
      expect:
        command: tgs-configure
        responses:
          'API Port.*': ''
          'Please enter one of MariaDB, MySql, PostgresSql, SqlServer or Sqlite:': 'MariaDB'
          "Enter the server's address and port.*": ""
          'Enter the database name.*': 'tgs'
          'Does this database already exist.*': 'y'
          'Enter username:': 'tgs'
          'Enter password:': "{{ tgs_db_password }}"
          'Minimum database user password length.*': ''
          'Default timeout for sending and receiving BYOND topics.*': ''
          'GitHub personal access token:': ''
          'Host API Documentation.*': ''
          'Enable file logging.*': ''
          'Log file directory path.*': ''
          'Enter one of Trace/Debug/Information/Warning/Error/Critical.*': ''
          'Enable logging to an external ElasticSearch server.*': ''
          'Enable the web control panel.*': ''
          'Allow web control panels hosted elsewhere.*': ''
          'Enter a comma seperated list of CORS allowed origins.*': ''
          'Enable swarm mode.*': ''
          'Enable version telemetry.*': 'n'
      no_log: true
      become: yes

    - name: Start TGStation Server
      systemd:
        name: tgstation-server
        state: started
        enabled: yes

  handlers:
    - name: Update apt cache
      apt:
        update_cache: yes
        
    - name: Restart MariaDB
      systemd:
        name: mariadb
        state: restarted
